name: "Build container image"
on:
  release:
    types: [created]
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to trigger docker push'
        required: true
        default: 'push'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check whether push docker image to repository
        id: registry
        run: |
            echo "Enable Push to Docker Registry: ${{ env.DOCKER_REPOSITORY != '' }}"
            echo "::set-output name=registry::${{ env.DOCKER_REPOSITORY != '' }}"
        env:
            DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
    outputs:
      registry: ${{ steps.registry.outputs.registry }}

  push:
    needs: [build]
    if: github.event_name == 'push' && needs.build.outputs.registry == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: build_push_release
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD  }}
        repository: ${{ secrets.DOCKER_REPOSITORY  }}
        add_git_labels: true
        tag_with_ref: true
        tags: ${{ github.sha }}, latest

  release:
    needs: [build]
    if: github.event_name == 'release' && needs.build.outputs.registry == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: build_push_release
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME  }}
        password: ${{ secrets.DOCKER_PASSWORD  }}
        repository: ${{ secrets.DOCKER_REPOSITORY }}
        add_git_labels: true
        tag_with_ref: true
        tags: ${{ github.sha }}, ${{ github.event.release.tag_name }}