{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tenantId": {
            "type": "string"
        },
        "subscriptionId": {
            "type": "string"
        }
    },
    "functions": [],
    "variables": {
        "apiVersion": "2021-04-01",
        "displayName": "Test"
    },
    "resources": [
        // Management Group - Test
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid(variables('displayName'))]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "[variables('displayName')]",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', parameters('tenantId'))]"
                    }
                }
            }
        },
        // Management Group - Test - Platform
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Platform')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Platform",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
            ]
        },
        // Management Group - Test - Platform - Connectivity
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Connectivity')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Connectivity",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid('Platform'))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Platform'))]"
            ]
        },
        // Management Group - Test - Platform - Management
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Management')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Management",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid('Platform'))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Platform'))]"
            ]
        },
        // Policy Assignment - Test - Platform - Management
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "Test-Policy-Assignment-Nested",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Management'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/policyAssignments",
                            "apiVersion": "2021-06-01",
                            "name": "TestPolicyAssignment",
                            "properties": {
                                "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a914e76-4921-4c19-b460-a2d36003525a"
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "scope": "[resourceId('Microsoft.Management/managementGroups/', guid('Management'))]"
        },
        // Empty 'delay' deployments to ensure roleAssignments have been replicated before submitting subscription deployments
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat('delayFor', copyIndex())]",
            "location": "[deployment().location]",
            "scope": "/",
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Management'))]"
            ],
            "copy": {
                "batchSize": 1,
                "count": 30,
                "mode": "Serial",
                "name": "waitingCompletion"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [],
                    "outputs": {}
                }
            }
        },
        // Subscription - Test - Platform - Management - Subscription-0
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "AzOps-Test-Move-Subscription",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Management'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Management/managementGroups/subscriptions",
                            "name": "[concat(guid('Management'), '/', parameters('subscriptionId'))]",
                            "apiVersion": "2020-05-01"
                        }
                    ],
                    "outputs": {}
                }
            },
            "scope": "/"
        },
        // Resource Group, Role Assignment, Policy Exemption and Route Table - Test - Platform - Management - Subscription-0 - App1-azopsrg
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "AzOps-Tests-Nested",
            "subscriptionId": "[parameters('subscriptionId')]",
            "location": "northeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'Test-Policy-Assignment-Nested')]",
                "[resourceId('Microsoft.Resources/deployments', 'AzOps-Test-Move-Subscription')]",
                "waitingCompletion"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Resources/resourceGroups",
                            "apiVersion": "2019-10-01",
                            "name": "App1-azopsrg",
                            "location": "northeurope"
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2021-04-01-preview",
                            "name": "[guid('RoleAssignmentTest')]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                                "principalId": "023e7c1c-1fa4-4818-bb78-0a9c5e8b0217",
                                "principalType": "ServicePrincipal"
                            }
                        },
                        {
                            "type": "Microsoft.Authorization/policyExemptions",
                            "apiVersion": "2020-07-01-preview",
                            "name": "PolicyExemptionTest",
                            "properties": {
                                "displayName": "TestPolicyAssignment - PolicyExemptionTest",
                                "exemptionCategory": "Waiver",
                                "expiresOn": "",
                                "metadata": {},
                                "policyAssignmentId": "[concat('/providers/Microsoft.Management/managementGroups/', guid('Management'), '/providers/Microsoft.Authorization/policyAssignments/TestPolicyAssignment')]",
                                "policyDefinitionReferenceIds": []
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2019-10-01",
                            "name": "RouteTableAndPolicy",
                            "resourceGroup": "App1-azopsrg",
                            "dependsOn": [
                                "App1-azopsrg"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "resources": [
                                        {
                                            "apiVersion": "2019-02-01",
                                            "type": "Microsoft.Network/routeTables",
                                            "name": "RouteTable",
                                            "location": "northeurope",
                                            "properties": {
                                                "disableBgpRoutePropagation": "false"
                                            }
                                        },
                                        {
                                            "type": "Microsoft.Network/firewallPolicies",
                                            "name": "TestPolicy",
                                            "apiVersion": "2021-06-01",
                                            "location": "eastus",
                                            "tags": {},
                                            "properties": {
                                                "sku": {
                                                    "tier": "Standard"
                                                },
                                                "threatIntelMode": "Alert",
                                                "threatIntelWhitelist": {
                                                    "fqdns": [],
                                                    "ipAddresses": []
                                                },
                                                "childPolicies": [],
                                                "ruleCollectionGroups": [
                                                ],
                                                "firewalls": []
                                            }
                                        },
                                        {
                                            "type": "Microsoft.OperationalInsights/workspaces",
                                            "name": "thisisalongloganalyticsworkspacename123456789011121314151617181",
                                            "apiVersion": "2017-03-15-preview",
                                            "location": "eastus",
                                            "tags": {},
                                            "properties": {
                                                "sku": {
                                                    "name": "pergb2018"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": {
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Resources/deployments",
                            "apiVersion": "2019-10-01",
                            "name": "RuleGroupCollection",
                            "resourceGroup": "App1-azopsrg",
                            "dependsOn": [
                                "RouteTableAndPolicy"
                            ],
                            "properties": {
                                "mode": "Incremental",
                                "expressionEvaluationOptions": {
                                    "scope": "inner"
                                },
                                "template": {
                                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                    "contentVersion": "1.0.0.0",
                                    "resources": [
                                        {
                                            "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
                                            "apiVersion": "2020-11-01",
                                            "name": "TestPolicy/TestGroup",
                                            "location": "eastus",
                                            "properties": {
                                                "priority": 100,
                                                "ruleCollections": [
                                                    {
                                                        "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                                                        "action": {
                                                            "type": "Allow"
                                                        },
                                                        "rules": [
                                                            {
                                                                "ruleType": "NetworkRule",
                                                                "name": "Test",
                                                                "ipProtocols": [
                                                                    "TCP"
                                                                ],
                                                                "sourceAddresses": [
                                                                    "10.100.100.0/24"
                                                                ],
                                                                "sourceIpGroups": [],
                                                                "destinationAddresses": [
                                                                    "10.200.201.0/24"
                                                                ],
                                                                "destinationIpGroups": [],
                                                                "destinationFqdns": [],
                                                                "destinationPorts": [
                                                                    "3389"
                                                                ]
                                                            }
                                                        ],
                                                        "name": "TestRule",
                                                        "priority": 101
                                                    }
                                                ]
                                            }
                                        }

                                    ],
                                    "outputs": {
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        // Management Group - Test - Platform - Identity
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Identity')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Identity",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid('Platform'))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Platform'))]"
            ]
        },
        // Management Group - Test - Landing Zones
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Landing-Zones')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Landing-Zones",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
            ]
        },
        // Management Group - Test - Landing Zones - SAP
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('SAP')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "SAP",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid('Landing-Zones'))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Landing-Zones'))]"
            ]
        },
        // Management Group - Test - Landing Zones - Online
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Online')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Online",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid('Landing-Zones'))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Landing-Zones'))]"
            ]
        },
        // Management Group - Test - Landing Zones - Corp
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Corp')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Corp",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid('Landing-Zones'))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid('Landing-Zones'))]"
            ]
        },
        // Management Group - Test - Sandboxes
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Sandboxes')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Sandboxes",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
            ]
        },
        // Management Group - Test - Decomissioned
        {
            "type": "Microsoft.Management/managementGroups",
            "name": "[guid('Decomissioned')]",
            "apiVersion": "[variables('apiVersion')]",
            "scope": "/",
            "properties": {
                "displayName": "Decomissioned",
                "details": {
                    "parent": {
                        "id": "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Management/managementGroups', guid(variables('displayName')))]"
            ]
        }
    ],
    "outputs": {
        "testManagementGroup": {
            "type": "string",
            "value": "[guid(variables('displayName'))]"
        },
        "platformManagementGroup": {
            "type": "string",
            "value": "[guid('Platform')]"
        },
        "managementManagementGroup": {
            "type": "string",
            "value": "[guid('Management')]"
        }
    }
}
