pr:
  paths:
    include:
      - '*'
    exclude:
      - .github/*
      - .vscode/*
      - docs/*
      - '*.md'

variables:
  DEFAULT_JOB_TIMEOUT_IN_MINUTES: 30
  AZ_ACCOUNTS_REQUIREDVERSION: "1.8.0"
  AZ_RESOURCES_REQUIREDVERSION: "2.0.1"
  PESTER_REQUIREDVERSION: "5.0.2"
  PSSCRIPTANALYZER_REQUIREDVERSION_REQUIREDVERSION: "1.19.0"

jobs:
  - job: pesterTests1
    displayName: Pester Tests (Module)
    timeoutInMinutes: ${{ variables.DEFAULT_JOB_TIMEOUT_IN_MINUTES }}

    pool:
      vmImage: "ubuntu-latest"

    steps:
      - task: PowerShell@2
        displayName: "[setup] Environment Configuration"
        inputs:
          targetType: filePath
          workingDirectory: $(System.DefaultWorkingDirectory)
          filePath: ./tests/scripts/Initialize-AzOpsTestEnvironment.ps1
          pwsh: true
        env:
          AZURE_CREDENTIALS: $(AZURE_CREDENTIALS)

      - task: PowerShell@2
        displayName: "[pester] Run Tests (Module)"
        inputs:
          targetType: inline
          workingDirectory: $(System.DefaultWorkingDirectory)
          script: |
            Invoke-Pester -Path "./tests/" -TagFilter "module" -CI -Output Detailed

      - task: PublishTestResults@2
        displayName: "[results] Publish Test Results"
        condition: always()
        inputs:
          testResultsFormat: "NUnit"
          testResultsFiles: "$(System.DefaultWorkingDirectory)/testResults.xml"
          publishRunAttachments: true

  - job: pesterTests2a
    displayName: Pester Tests (Scope)
    timeoutInMinutes: ${{ variables.DEFAULT_JOB_TIMEOUT_IN_MINUTES }}
    dependsOn: pesterTests1

    pool:
      vmImage: "ubuntu-latest"

    steps:
      - task: PowerShell@2
        displayName: "[setup] Environment Configuration"
        inputs:
          targetType: filePath
          workingDirectory: $(System.DefaultWorkingDirectory)
          filePath: ./tests/scripts/Initialize-AzOpsTestEnvironment.ps1
          pwsh: true
        env:
          AZURE_CREDENTIALS: $(AZURE_CREDENTIALS)

      - task: PowerShell@2
        displayName: "[pester] Run Tests (Scope)"
        inputs:
          targetType: inline
          workingDirectory: $(System.DefaultWorkingDirectory)
          script: |
            Invoke-Pester -Path "./tests/" -TagFilter "scope" -CI -Output Detailed

      - task: PublishTestResults@2
        displayName: "[results] Publish Test Results"
        condition: always()
        inputs:
          testResultsFormat: "NUnit"
          testResultsFiles: "$(System.DefaultWorkingDirectory)/testResults.xml"
          publishRunAttachments: true

  - job: pesterTests2b
    displayName: Pester Tests (In-A-Box)
    timeoutInMinutes: ${{ variables.DEFAULT_JOB_TIMEOUT_IN_MINUTES }}
    dependsOn: pesterTests1

    pool:
      vmImage: "ubuntu-latest"

    steps:
      - task: PowerShell@2
        displayName: "[setup] Environment Configuration"
        inputs:
          targetType: filePath
          workingDirectory: $(System.DefaultWorkingDirectory)
          filePath: ./tests/scripts/Initialize-AzOpsTestEnvironment.ps1
          pwsh: true
        env:
          AZURE_CREDENTIALS: $(AZURE_CREDENTIALS)
            
      - task: PowerShell@2
        displayName: "[pester] Run Tests (In-A-Box)"
        inputs:
          targetType: inline
          workingDirectory: $(System.DefaultWorkingDirectory)
          script: |
            Invoke-Pester -Path "./tests/" -TagFilter "iab" -CI -Output Detailed

      - task: PublishTestResults@2
        displayName: "[results] Publish Test Results"
        condition: always()
        inputs:
          testResultsFormat: "NUnit"
          testResultsFiles: "$(System.DefaultWorkingDirectory)/testResults.xml"
          publishRunAttachments: true
